buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
		  maven {
		      url "https://plugins.gradle.org/m2/"
		  }
	}
	
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "net.saliman:gradle-cobertura-plugin:2.4.0"
		classpath "gradle.plugin.org.hibernate.gradle.tools:hibernatetools-gradle-plugin:1.2.5"
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}


apply plugin: 'java'
apply plugin: 'org.springframework.boot'
//apply plugin: 'checkstyle'
apply plugin: 'net.saliman.cobertura'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: "org.hibernate.gradle.tools"
apply plugin: 'docker'


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8


jar {
	baseName = 'jittr-domain-repository-rest'
	version  = '0.1.0'
}

repositories {
	mavenCentral()
}

dependencies {
	compile("org.springframework.plugin:spring-plugin-core")	
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.security.oauth:spring-security-oauth2:2.0.12.RELEASE")
	compile("com.h2database:h2")
	compile("javax.inject:javax.inject:1")
	compile("org.apache.commons:commons-lang3:$commonsLangVersion")
	compile ("org.modelmapper:modelmapper:0.7.5")
	
	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("com.h2database:h2")
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.0'
}

/*group = 'grehov'

task buildDocker(type: Docker, dependsOn: build) {

  push = false
  applicationName = jar.baseName
  dockerfile = file('Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}*/



